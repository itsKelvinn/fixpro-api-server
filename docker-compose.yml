services:
    apiserver:
        build:
            context: .    
            dockerfile: Dockerfile
        ports:
            - '${APP_PORT}:80'
        volumes:
            - '.:/var/www/html'
            - '.env:/var/www/html/.env'
        networks:
            - profix-network
        depends_on:
            - pgsql
            - redis
    pgsql:
        image: 'postgres:17'
        ports:
            - '${DB_PORT}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'data-pgsql:/var/lib/postgresql/data'
        networks:
            - profix-network
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${REDIS_PORT}:6379'
        volumes:
            - 'data-redis:/data'
        networks:
            - profix-network
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    profix-network:
        driver: bridge
volumes:
    data-pgsql:
    data-redis:
